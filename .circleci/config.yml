version: 2.1

jobs:
  tests:
    docker:
      - image: cimg/python:3.9.18
      - image: circleci/redis:3.2-alpine
      - image: circleci/postgres:12
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
      - image: mailhog/mailhog

    environment:
      DEBUG: True
      PIPENV_VENV_IN_PROJECT: 'enabled'

    working_directory: ~/lite-hmrc

    steps:
      - checkout
      - run:
          name: Git Submodule Checkout
          command: |
            git submodule sync
            git submodule update --init
      - run:
          name: Set Environment File
          command: cp local.env .env

      # Download and cache dependencies
      # ensure this step occurs *before* installing dependencies
      - restore_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Dependencies
          command: pipenv sync --dev

      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Check migrations are made
          command: pipenv run ./manage.py makemigrations --check

      - run:
          name: Run tests
          command: pipenv run pytest --cov=. --cov-config=.coveragerc

      - run:
          name: Rename coverage file
          command: mkdir coverage-output && cp .coverage coverage-output/.coverage

      - persist_to_workspace:
          root: coverage-output
          paths:
            - .coverage

  tests_postgres13:
    docker:
      - image: cimg/python:3.9.18
      - image: circleci/redis:3.2-alpine
      - image: circleci/postgres:13
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
      - image: mailhog/mailhog

    environment:
      DEBUG: True
      PIPENV_VENV_IN_PROJECT: 'enabled'

    working_directory: ~/lite-hmrc

    steps:
      - checkout
      - run:
          name: Git Submodule Checkout
          command: |
            git submodule sync
            git submodule update --init
      - run:
          name: Set Environment File
          command: cp local.env .env

      # Download and cache dependencies
      # ensure this step occurs *before* installing dependencies
      - restore_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install Dependencies
          command: pipenv sync --dev

      - save_cache:
          paths:
            - ./venv
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}

      - run:
          name: Check migrations are made
          command: pipenv run ./manage.py makemigrations --check

      - run:
          name: Run tests on Postgres 13
          command: pipenv run pytest

  linting:
    docker:
      - image: cimg/python:3.9.18
    steps:
      - checkout

      - run: pipenv install pre-commit

      - restore_cache:
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ checksum ".pre-commit-config.yaml" }}

      - run:
          name: Install Dependencies
          command: pipenv sync --dev

      - run:
          name: Prospector
          command: pipenv run prospector -W pylint -W pep257

      - run:
          name: Black
          command: pipenv run black . --check --diff

      - run:
          name: isort
          command: pipenv run isort --check --diff .

      - run:
          name: Bandit
          command: |
            pipenv run bandit -c bandit.yaml -r .

      - run:
          name: Ruff
          command: pipenv run pre-commit run ruff --from-ref origin/HEAD --to-ref HEAD

      - save_cache:
          paths:
            - ./venv
            - ~/.cache/pre-commit
          # the cache key changes whenever any of the branch name, Pipfile.lock checksum, or .pre-commit-config.yaml checksum change
          key: dependencies-{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ checksum ".pre-commit-config.yaml" }}

  check_coverage:
    working_directory: ~/lite-hmrc
    docker:
      - image: cimg/python:3.9.18
    steps:
      - checkout

      - attach_workspace:
          at: ~/lite-hmrc/tmp

      - run: pip install coverage diff_cover

      - run: cp tmp/.coverage .

      - run: coverage xml

      - run: coverage html

      - store_artifacts:
          path: htmlcov

      - run: diff-cover coverage.xml --compare-branch=origin/master --html-report coverage-report.html

      - store_artifacts:
          path: coverage-report.html

      - run: zip -r coverage.zip htmlcov coverage-report.html

      - store_artifacts:
          path: coverage.zip

      - run: diff-cover coverage.xml --compare-branch=origin/master --fail-under=100


workflows:
  version: 2
  test:
    jobs:
      - tests
      - tests_postgres13
      - linting
      - check_coverage:
          requires:
            - tests
