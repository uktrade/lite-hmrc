services:
  lite-hmrc-postgres:
    image: "postgres:12"
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    expose:
      - 5432
    ports:
      - 5432:5432

  lite-hmrc-intg:
    container_name: "lite-hmrc-intg"
    env_file:
      - .env
    build: .
    platform: linux/amd64
    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      - lite-hmrc-postgres
      - celery
      - celery-beat
      - spire-to-dit-mailserver
      - hmrc-to-dit-mailserver
    expose:
      - 8000
    entrypoint: dockerize -wait tcp://lite-hmrc-postgres:5432 -wait tcp://spire-to-dit-mailserver:1110 -wait tcp://hmrc-to-dit-mailserver:1110
    command: pipenv run ./manage.py runserver 0.0.0.0:8000
    healthcheck:
      test: [ "CMD-SHELL", "python -m dbt_copilot_python.celery_health_check.healthcheck" ]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s

  spire-to-dit-mailserver:
    build:
      context: ./conf/mail_servers/
      args:
        - CN=spire-to-dit-mailserver
    environment:
      - MP_POP3_AUTH_FILE=/config/passwd
      - MP_POP3_TLS_CERT=/certs/cert.pem
      - MP_POP3_TLS_KEY=/certs/key.pem
      - MP_SMTP_AUTH_FILE=/config/passwd
      - MP_SMTP_TLS_CERT=/certs/cert.pem
      - MP_SMTP_TLS_KEY=/certs/key.pem
    ports:
      - 8025:8025
    volumes:
      - ./conf/mail_servers/spire-to-dit-mailserver/:/config

  hmrc-to-dit-mailserver:
    build:
      context: ./conf/mail_servers/
      args:
        - CN=hmrc-to-dit-mailserver
    environment:
      - MP_POP3_AUTH_FILE=/config/passwd
      - MP_POP3_TLS_CERT=/certs/cert.pem
      - MP_POP3_TLS_KEY=/certs/key.pem
      - MP_SMTP_AUTH_FILE=/config/passwd
      - MP_SMTP_TLS_CERT=/certs/cert.pem
      - MP_SMTP_TLS_KEY=/certs/key.pem
    ports:
      - 8026:8025
    volumes:
      - ./conf/mail_servers/hmrc-to-dit-mailserver/:/config

  celery:
    build: .
    volumes:
      - .:/app
    env_file: .env
    links:
      - lite-hmrc-postgres
      - redis
    command: pipenv run watchmedo auto-restart -d . -R -p '*.py' -- celery -A conf worker -l info

    healthcheck:
      test: [ "CMD-SHELL", "python -m dbt_copilot_python.celery_health_check.healthcheck" ]
      interval: 10s
      timeout: 5s
      retries: 2
      start_period: 5s

  celery-beat:
    build: .
    volumes:
      - .:/app
    env_file: .env
    links:
      - lite-hmrc-postgres
      - redis
    command:  pipenv run watchmedo auto-restart -d . -R -p '*.py' -- celery -A conf beat

  redis:
    image: "redis:5-alpine"
    container_name: hmrc-redis
    expose:
      - 6379
    ports:
      - 6379:6379
volumes:
  maildata:
